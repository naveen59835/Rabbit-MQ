PS C:\Users\Lenovo> docker run -it --network user --name mysql-container -e MYSQL_ROOT_PASSWORD=root -d mysql:latest
d2c7028806a36b074be186c7a1692067345135b134988de32e3339b4a8d8faec
PS C:\Users\Lenovo>




G:\NIIT\BackEnd\Course 3\Sprint 2\bej_c3_s2_containerize_rest_api_and_database_mc>docker build -t user-app:v1 .
[+] Building 8.2s (8/8) FINISHED
 => [internal] load build definition from Dockerfile                                                               0.2s
 => => transferring dockerfile: 205B                                                                               0.0s
 => [internal] load .dockerignore                                                                                  0.2s
 => => transferring context: 2B                                                                                    0.0s
 => [internal] load metadata for docker.io/library/openjdk:latest                                                  3.1s
 => [internal] load build context                                                                                  1.8s
 => => transferring context: 39.13MB                                                                               1.7s
 => [1/3] FROM docker.io/library/openjdk@sha256:fbddf9af4d18110cfbd80e8cd89fd7503c5bd784d6ffb207b53c95f0dcac77a7   0.0s
 => CACHED [2/3] WORKDIR usr/lib                                                                                   0.0s
 => [3/3] ADD ./target/c2s1demo-0.0.1-SNAPSHOT.jar /usr/lib/c2s1demo-0.0.1-SNAPSHOT.jar                            2.3s
 => exporting to image                                                                                             0.3s
 => => exporting layers                                                                                            0.3s
 => => writing image sha256:835ddc04e7e7b777790d05784f9b6010ec4b104e9bf343a2acfc3d61065dd9fc                       0.0s
 => => naming to docker.io/library/user-app:v1                                                                     0.0s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them

G:\NIIT\BackEnd\Course 3\Sprint 2\bej_c3_s2_containerize_rest_api_and_database_mc>



G:\NIIT\BackEnd\Course 3\Sprint 2\bej_c3_s2_containerize_rest_api_and_database_mc>docker run -d -p 8082:8082 --name users-app-container --network user user-app:v1
8487f3901128c59fcf520641d6d415e0ef64abfd005f9b0445a906bc82046d44

G:\NIIT\BackEnd\Course 3\Sprint 2\bej_c3_s2_containerize_rest_api_and_database_mc>


